//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfLoadTest.WcfServiceClient {
    
    
    #region Component Designer generated code 
    public partial class ServiceNetTcpClient_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::WcfLoadTest.WcfServiceClient.@__ServiceNetTcpClient.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient), typeof(global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient), typeof(global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient_))]
    internal sealed partial class @__ServiceNetTcpClient : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__ServiceNetTcpClient(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::WcfLoadTest.WcfServiceClient.@__ServiceNetTcpClient.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__ServiceNetTcpClient);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Init", "Init0", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "LoadFileAndReturnFileSizeInBytes", "LoadFileAndReturnFileSizeInBytes1", "(Lsystem/io/Stream;)J"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "GetFileBySize", "GetFileBySize2", "(I)Lsystem/io/Stream;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "GetFileSizes", "GetFileSizes3", "()[I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "GetIntValue", "GetIntValue4", "(I)I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorServiceNetTcpClient0", "__ctorServiceNetTcpClient0", "(Lnet/sf/jni4net/inj/IClrProxy;)V"));
            return methods;
        }
        
        private static void Init0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient>(@__env, @__obj);
            @__real.Init();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static long LoadFileAndReturnFileSizeInBytes1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle file) {
            // (Lsystem/io/Stream;)J
            // (LSystem/IO/Stream;)J
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            long @__return = default(long);
            try {
            global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient>(@__env, @__obj);
            @__return = ((long)(@__real.LoadFileAndReturnFileSizeInBytes(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.IO.Stream>(@__env, file))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle GetFileBySize2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int fileSize) {
            // (I)Lsystem/io/Stream;
            // (I)LSystem/IO/Stream;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.IO.Stream>(@__env, @__real.GetFileBySize(fileSize));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle GetFileSizes3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()[I
            // ()[I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.ArrayPrimC2J(@__env, @__real.GetFileSizes());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static int GetIntValue4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int value) {
            // (I)I
            // (I)I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient>(@__env, @__obj);
            @__return = ((int)(@__real.GetIntValue(value)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void @__ctorServiceNetTcpClient0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient @__real = new global::WcfLoadTest.WcfServiceClient.ServiceNetTcpClient();
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::WcfLoadTest.WcfServiceClient.@__ServiceNetTcpClient(@__env);
            }
        }
    }
    #endregion
}
